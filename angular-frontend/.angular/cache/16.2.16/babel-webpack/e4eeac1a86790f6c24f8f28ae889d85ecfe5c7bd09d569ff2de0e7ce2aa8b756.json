{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ListaEstudiantesComponent = class ListaEstudiantesComponent {\n  usuarioService;\n  prediccionService;\n  estudiantes = [];\n  filtroNombre = '';\n  cargando = true;\n  errores = [];\n  constructor(usuarioService, prediccionService) {\n    this.usuarioService = usuarioService;\n    this.prediccionService = prediccionService;\n  }\n  ngOnInit() {\n    this.cargarEstudiantes();\n  }\n  cargarEstudiantes() {\n    this.cargando = true;\n    this.usuarioService.getUsuarios().subscribe({\n      next: data => {\n        // Filtrar solo estudiantes (rol 3)\n        this.estudiantes = data.filter(usuario => usuario.id_rol === 3);\n        this.cargando = false;\n      },\n      error: err => {\n        console.error('Error al cargar estudiantes:', err);\n        this.errores.push('Error al cargar la lista de estudiantes');\n        this.cargando = false;\n      }\n    });\n  }\n  predecirTodos() {\n    if (confirm('¿Está seguro de predecir el riesgo para todos los estudiantes? Este proceso puede tomar tiempo.')) {\n      this.cargando = true;\n      this.prediccionService.predecirGrupo({}).subscribe({\n        next: resultado => {\n          console.log('Predicción completada:', resultado);\n          this.cargando = false;\n          alert(`Se ha realizado la predicción para ${resultado.estudiantes_procesados} estudiantes.`);\n          this.cargarEstudiantes(); // Recargar los datos\n        },\n\n        error: error => {\n          console.error('Error al predecir:', error);\n          this.cargando = false;\n          this.errores.push('Error al realizar la predicción de riesgo');\n          alert('Error al realizar la predicción. Intente nuevamente.');\n        }\n      });\n    }\n  }\n  filtrarEstudiantes() {\n    if (!this.filtroNombre.trim()) {\n      return this.estudiantes;\n    }\n    const filtro = this.filtroNombre.toLowerCase();\n    return this.estudiantes.filter(est => est.nombre.toLowerCase().includes(filtro) || est.apellido.toLowerCase().includes(filtro));\n  }\n  predecirEstudiante(id) {\n    this.cargando = true;\n    this.prediccionService.predecirEstudiante(id).subscribe({\n      next: resultado => {\n        console.log('Predicción individual completada:', resultado);\n        this.cargando = false;\n        alert(`Predicción realizada. Riesgo de deserción: ${(resultado.riesgo_desercion * 100).toFixed(2)}%`);\n        this.cargarEstudiantes(); // Recargar los datos\n      },\n\n      error: error => {\n        console.error('Error al predecir estudiante:', error);\n        this.cargando = false;\n        this.errores.push(`Error al predecir riesgo para el estudiante ID: ${id}`);\n        alert('Error al realizar la predicción individual. Intente nuevamente.');\n      }\n    });\n  }\n};\nListaEstudiantesComponent = __decorate([Component({\n  selector: 'app-lista-estudiantes',\n  templateUrl: './lista-estudiantes.component.html',\n  styleUrls: ['./lista-estudiantes.component.css']\n})], ListaEstudiantesComponent);\nexport { ListaEstudiantesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}