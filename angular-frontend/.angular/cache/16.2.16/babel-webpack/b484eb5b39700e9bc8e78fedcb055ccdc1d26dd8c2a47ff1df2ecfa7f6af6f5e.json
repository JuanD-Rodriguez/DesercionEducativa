{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _a;\nimport { Component } from '@angular/core';\nimport { UsuarioService } from 'src/app/core/services/usuario.service';\nimport { Router } from '@angular/router';\nlet PanelAdminComponent = class PanelAdminComponent {\n  constructor(usuarioService, router) {\n    this.usuarioService = usuarioService;\n    this.router = router;\n    this.usuarios = [];\n  }\n  ngOnInit() {\n    this.cargarUsuarios();\n  }\n  cargarUsuarios() {\n    this.usuarioService.getUsuarios().subscribe(data => {\n      this.usuarios = data;\n    });\n  }\n  eliminarUsuario(id) {\n    if (confirm('¿Estás seguro de eliminar este usuario?')) {\n      this.usuarioService.eliminarUsuario(id).subscribe(() => {\n        this.cargarUsuarios();\n      });\n    }\n  }\n  editarUsuario(id) {\n    this.router.navigate(['/admin/editar', id]);\n  }\n};\nPanelAdminComponent = __decorate([Component({\n  selector: 'app-panel-admin',\n  templateUrl: './panel-admin.component.html'\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof UsuarioService !== \"undefined\" && UsuarioService) === \"function\" ? _a : Object, Router])], PanelAdminComponent);\nexport { PanelAdminComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}