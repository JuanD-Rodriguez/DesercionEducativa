{"ast":null,"code":"import { __decorate } from \"tslib\";\n// buscar-usuario.component.ts\nimport { Component } from '@angular/core';\nlet BuscarUsuarioComponent = class BuscarUsuarioComponent {\n  usuarioService;\n  router;\n  // Definir todas las propiedades usadas en el HTML\n  terminoBusqueda = '';\n  filtroTipo = 'todos';\n  resultados = [];\n  busquedaRealizada = false;\n  cargando = false;\n  usuarioAEliminar = null;\n  constructor(usuarioService, router) {\n    this.usuarioService = usuarioService;\n    this.router = router;\n  }\n  ngOnInit() {\n    // Inicialización\n  }\n  buscarUsuarios() {\n    // Implementación\n    this.cargando = true;\n    this.usuarioService.getUsuarios().subscribe({\n      next: usuarios => {\n        if (!this.terminoBusqueda.trim()) {\n          this.resultados = usuarios;\n        } else {\n          const termino = this.terminoBusqueda.toLowerCase();\n          // Usar 'as any[]' para trabajar con propiedades dinámicas\n          const usuariosAny = usuarios;\n          this.resultados = usuariosAny.filter(u => u.nombre?.toLowerCase().includes(termino) || (u.apellido || '')?.toLowerCase().includes(termino) || (u.correo_electronico || u.correo || '')?.toLowerCase().includes(termino));\n        }\n        this.busquedaRealizada = true;\n        this.cargando = false;\n        this.aplicarFiltros();\n      },\n      error: error => {\n        console.error('Error al buscar usuarios:', error);\n        this.cargando = false;\n        this.busquedaRealizada = true;\n      }\n    });\n  }\n  aplicarFiltros() {\n    if (this.filtroTipo === 'todos') {\n      return;\n    }\n    let rolId;\n    switch (this.filtroTipo) {\n      case 'admin':\n        rolId = 1;\n        break;\n      case 'gestor':\n        rolId = 2;\n        break;\n      case 'estudiante':\n        rolId = 3;\n        break;\n      default:\n        return;\n    }\n    this.resultados = this.resultados.filter(u => (u.id_rol || u.rol_id) === rolId);\n  }\n  getTipoUsuario(id_rol) {\n    switch (id_rol) {\n      case 1:\n        return 'Administrador';\n      case 2:\n        return 'Gestor';\n      case 3:\n        return 'Estudiante';\n      default:\n        return 'Desconocido';\n    }\n  }\n  confirmarEliminar(usuario) {\n    this.usuarioAEliminar = usuario;\n  }\n  cancelarEliminar() {\n    this.usuarioAEliminar = null;\n  }\n  eliminarUsuario() {\n    if (!this.usuarioAEliminar) return;\n    const id = this.usuarioAEliminar.id_usuario || this.usuarioAEliminar.id;\n    if (!id) {\n      alert('No se puede eliminar el usuario porque no tiene ID.');\n      this.usuarioAEliminar = null;\n      return;\n    }\n    console.log('Eliminando usuario con ID:', id);\n    this.usuarioService.eliminarUsuario(id).subscribe({\n      next: () => {\n        this.buscarUsuarios(); // Refrescar resultados\n        this.usuarioAEliminar = null;\n        alert('Usuario eliminado con éxito');\n      },\n      error: error => {\n        console.error('Error eliminando usuario:', error);\n        this.usuarioAEliminar = null;\n        alert('Error al eliminar el usuario');\n      }\n    });\n  }\n};\nBuscarUsuarioComponent = __decorate([Component({\n  selector: 'app-buscar-usuario',\n  templateUrl: './buscar-usuario.component.html',\n  styleUrls: ['./buscar-usuario.component.css']\n})], BuscarUsuarioComponent);\nexport { BuscarUsuarioComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}