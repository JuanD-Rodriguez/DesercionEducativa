{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet FormularioService = /*#__PURE__*/(() => {\n  class FormularioService {\n    http;\n    apiUrl = 'http://localhost:5000/formulario';\n    constructor(http) {\n      this.http = http;\n    }\n    /**\n     * Obtiene todos los formularios\n     */\n    obtenerFormularios() {\n      return this.http.get(`${this.apiUrl}/formularios`);\n    }\n    /**\n     * Obtiene un formulario específico por su ID\n     */\n    obtenerFormulario(id) {\n      return this.http.get(`${this.apiUrl}/formularios/${id}`);\n    }\n    /**\n     * Crea un nuevo formulario con preguntas\n     */\n    crearFormulario(formulario) {\n      const token = localStorage.getItem('token');\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      };\n      const preguntasTransformadas = formulario.preguntas.map((p, index) => {\n        const texto = p.textoPregunta?.trim();\n        const categoria = p.categoria || 'academico';\n        if (!texto) {\n          throw new Error(`La pregunta #${index + 1} no tiene texto válido`);\n        }\n        return {\n          texto,\n          categoria\n        };\n      });\n      const payload = {\n        titulo: formulario.nombre?.trim() || 'Formulario sin título',\n        descripcion: formulario.descripcion?.trim() || '',\n        preguntas: preguntasTransformadas\n      };\n      return this.http.post(`${this.apiUrl}/crear`, payload, {\n        headers\n      });\n    }\n    /**\n     * Elimina un formulario\n     */\n    eliminarFormulario(id) {\n      return this.http.delete(`${this.apiUrl}/formularios/${id}`);\n    }\n    /**\n     * Activa o desactiva un formulario\n     */\n    cambiarEstado(id, estado) {\n      return this.http.put(`${this.apiUrl}/formularios/${id}/estado`, {\n        activo: estado\n      });\n    }\n    /**\n     * Obtiene las preguntas de un formulario\n     */\n    getPreguntas(idFormulario) {\n      let url = `${this.apiUrl}/preguntas`;\n      if (idFormulario) {\n        url += `?id_formulario=${idFormulario}`;\n      }\n      return this.http.get(url);\n    }\n    /**\n     * Envía las respuestas de un estudiante\n     */\n    enviarRespuestas(respuestas) {\n      return this.http.post(`${this.apiUrl}/respuestas`, {\n        respuestas\n      });\n    }\n    /**\n     * Obtiene las respuestas de un formulario\n     */\n    obtenerRespuestas(id) {\n      return this.http.get(`${this.apiUrl}/respuestas/formulario/${id}`);\n    }\n    static ɵfac = function FormularioService_Factory(t) {\n      return new (t || FormularioService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FormularioService,\n      factory: FormularioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return FormularioService;\n})();\nexport { FormularioService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}